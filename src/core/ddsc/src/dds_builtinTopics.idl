/*
 * Copyright(c) 2006 to 2018 ADLINK Technology Limited and others
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
 * v. 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
 */
#ifndef OSPL_DDS_BUILTINTOPICS_IDL
#define OSPL_DDS_BUILTINTOPICS_IDL

/*
This file was the one orginally in ./src/api/dcps/saj/code/.
(and therefore by implication ./src/api/dcps/cj/java/code).
*/

#define BUILTIN_TOPIC_KEY_TYPE_NATIVE   unsigned long

module DDS {


    // Added octet sequence definition.
    // Prevents IDL compiler warnings from deprecated anonymous types
    // on composite type members.
    typedef sequence<octet> octSeq;

    typedef BUILTIN_TOPIC_KEY_TYPE_NATIVE BuiltinTopicKey_t[3];
    typedef sequence<string> StringSeq;
    typedef short DataRepresentationId_t;

    const DataRepresentationId_t XCDR_REPRESENTATION  = 0;
    const DataRepresentationId_t XML_REPRESENTATION   = 0x001;
    const DataRepresentationId_t OSPL_REPRESENTATION  = 0x400;
    const DataRepresentationId_t GPB_REPRESENTATION   = 0x401;
    const DataRepresentationId_t INVALID_REPRESENTATION = 0x7FFF;

    struct Duration_t {
        long sec;
        unsigned long nanosec;
    };

    struct UserDataQosPolicy {
        octSeq value;
        // replaced deprecated anonymous sequence<octet> value;
    };

    struct TopicDataQosPolicy {
        octSeq value;
        // replaced deprecated anonymous sequence<octet> value;
    };

    struct GroupDataQosPolicy {
        octSeq value;
        // replaced deprected anonymous sequence<octet> value;
    };

    struct TransportPriorityQosPolicy {
        long value;
    };

    struct LifespanQosPolicy {
        Duration_t duration;
    };

    enum DurabilityQosPolicyKind {
        VOLATILE_DURABILITY_QOS,
        TRANSIENT_LOCAL_DURABILITY_QOS,
        TRANSIENT_DURABILITY_QOS,
        PERSISTENT_DURABILITY_QOS
    };

    struct DurabilityQosPolicy {
        DurabilityQosPolicyKind kind;
    };

    enum PresentationQosPolicyAccessScopeKind {
        INSTANCE_PRESENTATION_QOS,
        TOPIC_PRESENTATION_QOS,
        GROUP_PRESENTATION_QOS
    };

    struct PresentationQosPolicy {
        PresentationQosPolicyAccessScopeKind access_scope;
        boolean coherent_access;
        boolean ordered_access;
    };

    struct DeadlineQosPolicy {
        Duration_t period;
    };

    struct LatencyBudgetQosPolicy {
        Duration_t duration;
    };

    enum OwnershipQosPolicyKind {
        SHARED_OWNERSHIP_QOS,
        EXCLUSIVE_OWNERSHIP_QOS
    };

    struct OwnershipQosPolicy {
        OwnershipQosPolicyKind kind;
    };

    struct OwnershipStrengthQosPolicy {
        long value;
    };

    enum LivelinessQosPolicyKind {
        AUTOMATIC_LIVELINESS_QOS,
        MANUAL_BY_PARTICIPANT_LIVELINESS_QOS,
        MANUAL_BY_TOPIC_LIVELINESS_QOS
    };

    struct LivelinessQosPolicy {
        LivelinessQosPolicyKind kind;
        Duration_t lease_duration;
    };

    struct TimeBasedFilterQosPolicy {
        Duration_t minimum_separation;
    };

    struct PartitionQosPolicy {
        StringSeq name;
    };

    enum ReliabilityQosPolicyKind {
        BEST_EFFORT_RELIABILITY_QOS,
        RELIABLE_RELIABILITY_QOS
    };

    struct ReliabilityQosPolicy {
        ReliabilityQosPolicyKind kind;
        Duration_t max_blocking_time;
        boolean synchronous;
    };

    enum DestinationOrderQosPolicyKind {
        BY_RECEPTION_TIMESTAMP_DESTINATIONORDER_QOS,
        BY_SOURCE_TIMESTAMP_DESTINATIONORDER_QOS
    };

    struct DestinationOrderQosPolicy {
        DestinationOrderQosPolicyKind kind;
    };

    enum HistoryQosPolicyKind {
        KEEP_LAST_HISTORY_QOS,
        KEEP_ALL_HISTORY_QOS
    };

    struct HistoryQosPolicy {
        HistoryQosPolicyKind kind;
        long depth;
    };

    struct ResourceLimitsQosPolicy {
        long max_samples;
        long max_instances;
        long max_samples_per_instance;
    };

    struct DurabilityServiceQosPolicy {
        Duration_t service_cleanup_delay;
        HistoryQosPolicyKind history_kind;
        long history_depth;
        long max_samples;
        long max_instances;
        long max_samples_per_instance;
    };

    struct ProductDataQosPolicy {
        string value;
    };

    struct EntityFactoryQosPolicy {
        boolean autoenable_created_entities;
    };

    struct ShareQosPolicy {
        string name;
        boolean enable;
    };

    struct WriterDataLifecycleQosPolicy {
        boolean autodispose_unregistered_instances;
        Duration_t autopurge_suspended_samples_delay;
        Duration_t autounregister_instance_delay;
    };

    enum InvalidSampleVisibilityQosPolicyKind {
        NO_INVALID_SAMPLES,
        MINIMUM_INVALID_SAMPLES,
        ALL_INVALID_SAMPLES
    };

    struct InvalidSampleVisibilityQosPolicy {
        InvalidSampleVisibilityQosPolicyKind kind;
    };

// @discrepancy The below QoS did not exist in ./etc/idlpp/dds_dcps.idl Retain ?

    struct SubscriptionKeyQosPolicy {
        boolean use_key_list;
        StringSeq key_list;
    };

// @discrepancy End of above discrepancy

    struct ReaderDataLifecycleQosPolicy {
        Duration_t autopurge_nowriter_samples_delay;
        Duration_t autopurge_disposed_samples_delay;
        boolean autopurge_dispose_all;
        // @discrepancy The below member existed in this file but did not
        // in ./etc/idlpp/dds_dcps.idl. Retain ?
        boolean enable_invalid_samples; // @deprecated Will be replaced by invalid_sample_visibility in due time
        InvalidSampleVisibilityQosPolicy invalid_sample_visibility;
    };

    struct UserKeyQosPolicy {
        boolean enable;
        string expression;
    };

    struct ReaderLifespanQosPolicy {
        boolean use_lifespan;
        Duration_t duration;
    };

    struct TypeHash {
        unsigned long long msb;
        unsigned long long lsb;
    };

    struct ParticipantBuiltinTopicData {
        BuiltinTopicKey_t key;
        UserDataQosPolicy user_data;
    };
#pragma keylist ParticipantBuiltinTopicData key

    struct TopicBuiltinTopicData {
        BuiltinTopicKey_t key;
        string name;
        string type_name;
        DurabilityQosPolicy durability;
        DurabilityServiceQosPolicy durability_service;
        DeadlineQosPolicy deadline;
        LatencyBudgetQosPolicy latency_budget;
        LivelinessQosPolicy liveliness;
        ReliabilityQosPolicy reliability;
        TransportPriorityQosPolicy transport_priority;
        LifespanQosPolicy lifespan;
        DestinationOrderQosPolicy destination_order;
        HistoryQosPolicy history;
        ResourceLimitsQosPolicy resource_limits;
        OwnershipQosPolicy ownership;
        TopicDataQosPolicy topic_data;
    };
#pragma keylist TopicBuiltinTopicData key

    struct TypeBuiltinTopicData {
        string name;
        DataRepresentationId_t data_representation_id;
        TypeHash type_hash;
        octSeq meta_data;
        octSeq extentions;
    };
#pragma keylist TypeBuiltinTopicData name data_representation_id type_hash.msb type_hash.lsb

    struct PublicationBuiltinTopicData {
        BuiltinTopicKey_t key;
        BuiltinTopicKey_t participant_key;
        string topic_name;
        string type_name;
        DurabilityQosPolicy durability;
        DeadlineQosPolicy deadline;
        LatencyBudgetQosPolicy latency_budget;
        LivelinessQosPolicy liveliness;
        ReliabilityQosPolicy reliability;
        LifespanQosPolicy lifespan;
        DestinationOrderQosPolicy destination_order;
        UserDataQosPolicy user_data;
        OwnershipQosPolicy ownership;
        OwnershipStrengthQosPolicy ownership_strength;
        PresentationQosPolicy presentation;
        PartitionQosPolicy partition;
        TopicDataQosPolicy topic_data;
        GroupDataQosPolicy group_data;
    };
#pragma keylist PublicationBuiltinTopicData key

    struct SubscriptionBuiltinTopicData {
        BuiltinTopicKey_t key;
        BuiltinTopicKey_t participant_key;
        string topic_name;
        string type_name;
        DurabilityQosPolicy durability;
        DeadlineQosPolicy deadline;
        LatencyBudgetQosPolicy latency_budget;
        LivelinessQosPolicy liveliness;
        ReliabilityQosPolicy reliability;
        OwnershipQosPolicy ownership;
        DestinationOrderQosPolicy destination_order;
        UserDataQosPolicy user_data;
        TimeBasedFilterQosPolicy time_based_filter;
        PresentationQosPolicy presentation;
        PartitionQosPolicy partition;
        TopicDataQosPolicy topic_data;
        GroupDataQosPolicy group_data;
    };
#pragma keylist SubscriptionBuiltinTopicData key

    struct CMParticipantBuiltinTopicData {
        BuiltinTopicKey_t key;
        ProductDataQosPolicy product;
    };
#pragma keylist CMParticipantBuiltinTopicData key

    struct CMPublisherBuiltinTopicData {
        BuiltinTopicKey_t key;
        ProductDataQosPolicy product;
        BuiltinTopicKey_t participant_key;
        string name;
        EntityFactoryQosPolicy entity_factory;
        PartitionQosPolicy partition;
    };
#pragma keylist CMPublisherBuiltinTopicData key

    struct CMSubscriberBuiltinTopicData {
        BuiltinTopicKey_t key;
        ProductDataQosPolicy product;
        BuiltinTopicKey_t participant_key;
        string name;
        EntityFactoryQosPolicy entity_factory;
        ShareQosPolicy share;
        PartitionQosPolicy partition;
    };
#pragma keylist CMSubscriberBuiltinTopicData key

    struct CMDataWriterBuiltinTopicData {
        BuiltinTopicKey_t key;
        ProductDataQosPolicy product;
        BuiltinTopicKey_t publisher_key;
        string name;
        HistoryQosPolicy history;
        ResourceLimitsQosPolicy resource_limits;
        WriterDataLifecycleQosPolicy writer_data_lifecycle;
    };
#pragma keylist CMDataWriterBuiltinTopicData key

    struct CMDataReaderBuiltinTopicData {
        BuiltinTopicKey_t key;
        ProductDataQosPolicy product;
        BuiltinTopicKey_t subscriber_key;
        string name;
        HistoryQosPolicy history;
        ResourceLimitsQosPolicy resource_limits;
        ReaderDataLifecycleQosPolicy reader_data_lifecycle;
        UserKeyQosPolicy subscription_keys;
        ReaderLifespanQosPolicy reader_lifespan;
        ShareQosPolicy share;
    };
#pragma keylist CMDataReaderBuiltinTopicData key

};

#endif /* OSPL_DDS_BUILTINTOPICS_IDL */
