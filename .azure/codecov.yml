#
# Copyright(c) 2021 ADLINK Technology Limited and others
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
# v. 1.0 which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
#

#
# Azure Pipeline specifically for building and submitting to Codecov
#

trigger: none
pr: none

schedules:
  - cron: "0 12 * * 0"
    branches:
      include: [ master ]
    always: false

strategy:
  matrix:
    'Ubuntu 20.04 LTS with GCC 10 (Debug, x86_64)':
      image: ubuntu-20.04
      cc: gcc-10
      coverage: on

pool:
  vmImage: $(image)

steps:
  - template: /.azure/templates/build-test.yml
  - bash: |
      set -e -x
      cd build
      slug=$(echo "${BUILD_REPOSITORY_URI}" | sed -nE 's#.*/([^/]+/[^\]+)#\1#p')
      commit="${BUILD_SOURCEVERSION}"
      if [ -n "$pr" ] && [ "$pr" != false ]; then
        mc=$(git show --no-patch --format="%P" 2>/dev/null || echo "")
        if [[ "$mc" =~ ^[a-z0-9]{40}[[:space:]][a-z0-9]{40}$ ]]; then
          mc=$(echo "$mc" | cut -d ' ' -f2)
          commit=$mc
        fi
      fi
      query=$(curl -Gso /dev/null -w "%{url_effective}" "" \
        --data-urlencode "package=cmake-codecov.io" \
        --data-urlencode "token=${token}" \
        --data-urlencode "branch=${BUILD_SOURCEBRANCH#/refs/heads/}" \
        --data-urlencode "commit=${commit}" \
        --data-urlencode "build=${BUILD_BUILDNUMBER}" \
        --data-urlencode "build_url=${SYSTEM_TEAMFOUNDATIONSERVERURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}" \
        --data-urlencode "tag=" \
        --data-urlencode "slug=${slug}" \
        --data-urlencode "service=azure_pipelines" \
        --data-urlencode "flags=" \
        --data-urlencode "pr=${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER:-$SYSTEM_PULLREQUEST_PULLREQUESTID}" \
        --data-urlencode "job=${BUILD_BUILDID}" \
        --data-urlencode "project=${SYSTEM_TEAMPROJECT}" \
        --data-urlencode "server_uri=${SYSTEM_TEAMFOUNDATIONSERVERURI}" \
        2>/dev/null | cut -c 3- | sed -e 's/%0A//')
      cmake --build . --target codecov
      code=$(curl -X POST -w "%{http_code}" \
        --data-binary @"codecov.tar.gz" \
        --retry 5 --retry-delay 2 --connect-timeout 2 \
        -H 'Content-Type: text/plain' \
        -H 'Content-Encoding: gzip' \
        -H 'X-Content-Encoding: gzip' \
        -H 'Accept: text/plain' \
        "https://codecov.io/upload/v2?$query")
      [[ "${code}" =~ "success" ]] || (echo "cURL exited with ${code}" 1>&2 && exit 1)
    name: submit_to_codecov
    env:
      token: $(CODECOV_TOKEN)
