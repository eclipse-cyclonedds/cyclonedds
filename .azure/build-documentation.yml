#
# Copyright(c) 2021 ADLINK Technology Limited and others
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
# v. 1.0 which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
#

#
# Azure Pipeline specifically for building and publishing documentation
#

trigger:
  tags:
    include:
    - '*'
  branches:
    include:
    - 'master'

pool:
  vmImage: ubuntu-20.04

steps:
  ## Fetch version number to ensure up-to-date cache
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
    name: install_python
  - bash: |
      echo "###vso[task.setvariable variable=pip_cache;]${HOME}/.cache/pip"
      sudo apt-get install -y doxygen
    name: setup_linux
    displayName: Setup Linux
  - task: Cache@2
    inputs:
      key: pip-docs | 4 | $(Agent.OS)
      path: $(pip_cache)
    name: cache_pip
    displayName: Pip cache
  - bash: |
      set -e -x
      pip install sphinx breathe exhale sphinx-rtd-theme --user --upgrade
    name: install_sphinx
    displayName: Install required Sphinx python packages
  - task: InstallSSHKey@0
    inputs:
      knownHostsEntry: $(known_hosts_entry)
      sshPublicKey: $(ssh_public_key)
      sshKeySecureFile: deploy_key
    name: 'get_deploy_key'
    displayName: Get secure ssh key to submit to the documentation repo.
  - bash: |
      set -e -x
      mkdir build
      cd build
      cmake .. -DBUILD_DOCS=ON
      cmake --build . --target docs
    name: 'build_documentation'
    displayName: Build documentation
  - bash: |
      set -e -x
      git clone $(documentation_repository) documentation-repo
    name: get_site_repo
    displayName: Pull documentation repo
  - bash: |
      set -e -x
      if [ "$(Build.SourceBranchName)" = "master" ]; then
        echo "###vso[task.setvariable variable=docs_tag;]latest"
      else
        echo "###vso[task.setvariable variable=docs_tag;]$(echo '$(Build.SourceBranchName)' | grep -Eo '^[[:digit:]]\.[[:digit:]]\.[[:digit:]]')"
      fi
    name: "determine_docu_tag"
    displayName: Determine the documentation version number
  - bash: |
      set -e -x
      rm -rf "documentation-repo/docs/c/${DOCS_TAG}" || true
      cp -R "build/docs/docs" "documentation-repo/docs/c/${DOCS_TAG}"
      cd documentation-repo
      git add "docs/c/${DOCS_TAG}"
      git config --local user.name "Azure Pipelines"
      git config --local user.email "azuredevops@microsoft.com"
      (git commit -m "Publishing GitHub Pages ${DOCS_TAG}" && git push origin HEAD:master) || true
    name: 'commit_pages'
    displayName: Commit new documentation into repo
